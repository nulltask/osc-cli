#!/usr/bin/env node

/**
 * Module dependencies.
 */

var pkg = require('../package.json');
var dgram = require('dgram');
var socket = dgram.createSocket('udp4');
var exit = process.exit;
var program = require('commander');
var osc = require('osc-min');

var defaults = { host: 'localhost', port: 7400 };

function parseHost(val) {
  var splitted = val.split(':');
  return {
    host: splitted[0] || defaults.host,
    port: splitted[1] || defaults.port
  };
}

program
  .version(pkg.version)
  .option('-H, --host <host>', 'host', parseHost, defaults)
  .option('-s --silent', 'output');

program.parse(process.argv);

var remote = program.host;
var address = program.args.shift();
var args = program.args.map(function(el, i) {
  var val;

  val = parseInt(el, 10);
  if (val + '' === el) return { type: 'integer', value: val };

  val = parseFloat(el);
  if (val + '' === el) return { type: 'float', value: val };

  return { type: 'string', value: el };
});

if (!address) {
  program.outputHelp();
  console.error('  one or more arguments require.\n');
  exit(-1);
}

var buf = osc.toBuffer({
  address: address,
  args: args
});

socket.send(buf, 0, buf.length, remote.port, remote.host, function(err) {
  if (err) {
    console.error(err);
    exit(-1);
  }
  if (!program.silent) {
    console.log(' sent %s (%s) to %s:%s',
      address, program.args.join(', '), remote.host, remote.port);
  }
  exit(0);
});
